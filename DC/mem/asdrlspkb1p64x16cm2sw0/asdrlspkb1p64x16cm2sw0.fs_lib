//---------------------------------------------------------------------
//               Copyright(c) Synopsys, Inc.                           
//     All Rights reserved - Unpublished -rights reserved under        
//     the Copyright laws of the United States of America.             
//                                                                     
//  U.S. Patents: 7,093,156 B1 and 7,406,620 B2 (and more pending).    
//                                                                     
//  This file includes the Confidential information of Synopsys, Inc.  
//  and Huali.                                                         
//  The receiver of this Confidential Information shall not disclose   
//  it to any third party and shall protect its confidentiality by     
//  using the same degree of care, but not less than a reasonable      
//  degree of care, as the receiver uses to protect receiver's own     
//  Confidential Information.                                          
//  Licensee acknowledges and agrees that all output generated for     
//  Licensee by Synopsys, Inc. as described in the pertinent Program   
//  Schedule(s), or generated by Licensee through use of any Compiler  
//  licensed hereunder contains information that complies with the     
//  Virtual Component Identification Physical Tagging Standard (VCID)  
//  as maintained by the Virtual Socket Interface Alliance (VSIA).     
//  Such information may be expressed in GDSII Layer 63 or other such  
//  layer designated by the VSIA, hardware definition languages, or    
//  other formats.  Licensee is not authorized to alter or change any  
//  such information.                                                  
//---------------------------------------------------------------------
//                                                                     
//  Built for linux64 and running on linux64.                          
//                                                                     
//  Software           : Rev: S-2021.12                                
//  Library Format     : Rev: 1.05.00                                  
//  Compiler Name      : hu55npkb1p11asdrl32ksa03p1                    
//  Platform           : Linux3.10.0-1160.49.1.el7.x86_64              
//                     : #1 SMP Tue Nov 30 15:51:32 UTC 2021x86_64     
//  Date of Generation : Fri Feb 18 10:17:49 CST 2022                  
//                                                                     
//---------------------------------------------------------------------
//This file may be generated under license from a third party.The use of a file
//generated under such license is restricted for use only by permitted licensees
//of such party. The file format is the proprietary and copyrighted property of
//such third licensors , and may be subject to restrictions on its use and 
//disclosure. 
//   --------------------------------------------------------------     
//                       Template Revision : 3.7.8                      
//   --------------------------------------------------------------     
//                      * Synchronous, 1-Port SRAM *                  
//                THIS IS A SYNCHRONOUS 1-PORT MEMORY MODEL           
//                                                                    
//   Memory Name:asdrlspkb1p64x16cm2sw0                               
//   Memory Size:64 words x 16 bits                                   
//                                                                    
//                               PORT NAME                            
//                               ---------                            
//               Output Ports                                         
//                                   Q[15:0]                          
//               Input Ports:                                         
//                                   ADR[5:0]                         
//                                   D[15:0]                          
//                                   WE                               
//                                   ME                               
//                                   CLK                              
//                                   TEST1                            
//                                   RM[3:0]                          
//                                   RME                              

model asdrlspkb1p64x16cm2sw0 (  Q, ADR, D, WE, ME, CLK, TEST1, RM, RME ) (



        bist_definition (
// This MBIST model does not contain sufficient information
// to gurantee exact checkerboard pattern.
                address         ADR    ( array = 5:0;) ;
                data_in         D      ( array = 15:0;) ;
                data_out        Q       ( array = 15:0;) ;
                write_enable    WE     high ;
                clock           CLK     high ;
                chip_enable     ME     low  ;
                dont_touch      TEST1  high ;
                dont_touch      RM      ( array =  3:0;) ;
                dont_touch      RME    high ;

                vendor  =   "Synopsys, Inc.";
                message =   "SiWare Single Port High Density Leakage Control 
Register File 32K Sync with 64 words by 16 bits, Column mux 2";
                min_address  = 0;
                max_address  = 63;
                data_size    = 16;
                addr_inc     = 2;
                top_column   = 2;
                top_word     = 1;

                read_write_port (
                        read_cycle (
                                change  ADR;
                                wait;
                                assert  CLK;
                                wait;
                                expect  Q move;
                                wait;
                        )

                        write_cycle (
                                change  ADR;
                                change  D;
                                assert  WE;
                                wait;
                                assert  WE;
                                assert  CLK;
                                wait;
                        )
                )
        )
  input (ADR) (array = 5:0;)
  input (D) (array = 15:0;)
  input (WE) ( active = high; )
  input (ME) ( active = high; )
  input (CLK) ( clock = rise_edge; )
  input (TEST1) ( used = false; ) // not supported 
  input (RM) (array = 3:0; used = false;)// not supported
  input (RME) ( used = false; ) // not supported 
intern ( wm_en ) (function = WE * ME ; )
intern ( rm_en ) (function = !WE * ME ; )
// This is RAM Model Part 
output ( Q)(
    array = 15:0;
    data_size = 16;
    address_size = 6;
    min_address = 0;
    max_address = 63;
   edge_trigger = RW;
   primitive = _cram(,,
    _read{,h,h,h} (,CLK,rm_en ,
        ADR<5>, ADR<4>, ADR<3>, ADR<2>, ADR<1>, ADR<0>,
        Q
      ),
    _write{H,H,H} (CLK,wm_en,
         ADR<5>, ADR<4>, ADR<3>, ADR<2>, ADR<1>, ADR<0>,
         D<15>, D<14>, D<13>, D<12>, D<11>, D<10>, D<9>, D<8>, D<7>, D<6>, D<5>, 
D<4>, D<3>, D<2>, D<1>, D<0>
      ) 
    );
   )
  )
