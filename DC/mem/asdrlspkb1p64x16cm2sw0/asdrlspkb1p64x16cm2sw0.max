/*---------------------------------------------------------------------*/
/*               Copyright(c) Synopsys, Inc.                           */
/*     All Rights reserved - Unpublished -rights reserved under        */
/*     the Copyright laws of the United States of America.             */
/*                                                                     */
/*  U.S. Patents: 7,093,156 B1 and 7,406,620 B2 (and more pending).    */
/*                                                                     */
/*  This file includes the Confidential information of Synopsys, Inc.  */
/*  and Huali.                                                         */
/*  The receiver of this Confidential Information shall not disclose   */
/*  it to any third party and shall protect its confidentiality by     */
/*  using the same degree of care, but not less than a reasonable      */
/*  degree of care, as the receiver uses to protect receiver's own     */
/*  Confidential Information.                                          */
/*  Licensee acknowledges and agrees that all output generated for     */
/*  Licensee by Synopsys, Inc. as described in the pertinent Program   */
/*  Schedule(s), or generated by Licensee through use of any Compiler  */
/*  licensed hereunder contains information that complies with the     */
/*  Virtual Component Identification Physical Tagging Standard (VCID)  */
/*  as maintained by the Virtual Socket Interface Alliance (VSIA).     */
/*  Such information may be expressed in GDSII Layer 63 or other such  */
/*  layer designated by the VSIA, hardware definition languages, or    */
/*  other formats.  Licensee is not authorized to alter or change any  */
/*  such information.                                                  */
/*---------------------------------------------------------------------*/
/*                                                                     */
/*  Built for linux64 and running on linux64.                          */
/*                                                                     */
/*  Software           : Rev: S-2021.12                                */
/*  Library Format     : Rev: 1.05.00                                  */
/*  Compiler Name      : hu55npkb1p11asdrl32ksa03p1                    */
/*  Platform           : Linux3.10.0-1160.49.1.el7.x86_64              */
/*                     : #1 SMP Tue Nov 30 15:51:32 UTC 2021x86_64     */
/*  Date of Generation : Fri Feb 18 10:17:50 CST 2022                  */
/*                                                                     */
/*---------------------------------------------------------------------*/
/*   --------------------------------------------------------------   */
/*                       Template Revision : 3.7.8                    */
/*   --------------------------------------------------------------   */
/*                      * Synchronous, 1-Port SRAM *                  */
/*                      * Verilog Behavioral Model *                  */
/*                THIS IS A SYNCHRONOUS 1-PORT MEMORY MODEL           */
/*                                                                    */
/*   Memory Name:asdrlspkb1p64x16cm2sw0                               */
/*   Memory Size:64 words x 16 bits                                   */
/*                                                                    */
/*                               PORT NAME                            */
/*                               ---------                            */
/*               Output Ports                                         */
/*                                   Q[15:0]                          */
/*               Input Ports:                                         */
/*                                   ADR[5:0]                         */
/*                                   D[15:0]                          */
/*                                   WE                               */
/*                                   ME                               */
/*                                   CLK                              */
/*                                   TEST1                            */
/*                                   RM[3:0]                          */
/*                                   RME                              */

`define read_write readx
module asdrlspkb1p64x16cm2sw0_mem (MQ, MADR, MD, MME, CLK, MWE);
output [15 : 0] MQ;
input [5 : 0] MADR;
input [15 : 0] MD;
input MWE;
input MME;
input CLK;
reg [15 : 0] MQ;
reg [15 : 0 ] memory_array[63 : 0 ];
and u0 ( MWRITEA, MME, MWE );
and ur0 ( MREADA, MME, !MWE );
always @ ( posedge CLK) if ( MWRITEA ) begin
                 memory_array[MADR] = MD;
             end
always @ ( posedge CLK) if ( MREADA ) begin
                 MQ = memory_array[MADR] ;
            end


endmodule

`undef read_write
`celldefine 
module asdrlspkb1p64x16cm2sw0 (  Q, ADR, D, WE, ME, CLK, TEST1, RM, RME );

output  [15:0] Q;
input  [5:0] ADR;
input  [15:0] D;
input WE;
input ME;
input CLK;
input TEST1;
input  [3:0] RM;
input RME;

reg [15 : 0] MMQ;

_BUF U_WE ( WE, MWE );
_BUF U_ME ( ME, MME );
_BUF U_Q_0 ( MMQ[0] ,Q[0]);
_BUF U_Q_1 ( MMQ[1] ,Q[1]);
_BUF U_Q_2 ( MMQ[2] ,Q[2]);
_BUF U_Q_3 ( MMQ[3] ,Q[3]);
_BUF U_Q_4 ( MMQ[4] ,Q[4]);
_BUF U_Q_5 ( MMQ[5] ,Q[5]);
_BUF U_Q_6 ( MMQ[6] ,Q[6]);
_BUF U_Q_7 ( MMQ[7] ,Q[7]);
_BUF U_Q_8 ( MMQ[8] ,Q[8]);
_BUF U_Q_9 ( MMQ[9] ,Q[9]);
_BUF U_Q_10 ( MMQ[10] ,Q[10]);
_BUF U_Q_11 ( MMQ[11] ,Q[11]);
_BUF U_Q_12 ( MMQ[12] ,Q[12]);
_BUF U_Q_13 ( MMQ[13] ,Q[13]);
_BUF U_Q_14 ( MMQ[14] ,Q[14]);
_BUF U_Q_15 ( MMQ[15] ,Q[15]);
 
asdrlspkb1p64x16cm2sw0_mem asdrlspkb1p64x16cm2sw0 (.MQ(MMQ), .MADR(ADR), .MD(D), .MME(MME),.CLK(CLK),.MWE(MWE));
endmodule
`endcelldefine 
