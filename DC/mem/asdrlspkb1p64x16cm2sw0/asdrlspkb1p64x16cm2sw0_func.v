/*---------------------------------------------------------------------*/
/*               Copyright(c) Synopsys, Inc.                           */
/*     All Rights reserved - Unpublished -rights reserved under        */
/*     the Copyright laws of the United States of America.             */
/*                                                                     */
/*  U.S. Patents: 7,093,156 B1 and 7,406,620 B2 (and more pending).    */
/*                                                                     */
/*  This file includes the Confidential information of Synopsys, Inc.  */
/*  and Huali.                                                         */
/*  The receiver of this Confidential Information shall not disclose   */
/*  it to any third party and shall protect its confidentiality by     */
/*  using the same degree of care, but not less than a reasonable      */
/*  degree of care, as the receiver uses to protect receiver's own     */
/*  Confidential Information.                                          */
/*  Licensee acknowledges and agrees that all output generated for     */
/*  Licensee by Synopsys, Inc. as described in the pertinent Program   */
/*  Schedule(s), or generated by Licensee through use of any Compiler  */
/*  licensed hereunder contains information that complies with the     */
/*  Virtual Component Identification Physical Tagging Standard (VCID)  */
/*  as maintained by the Virtual Socket Interface Alliance (VSIA).     */
/*  Such information may be expressed in GDSII Layer 63 or other such  */
/*  layer designated by the VSIA, hardware definition languages, or    */
/*  other formats.  Licensee is not authorized to alter or change any  */
/*  such information.                                                  */
/*---------------------------------------------------------------------*/
/*                                                                     */
/*  Built for linux64 and running on linux64.                          */
/*                                                                     */
/*  Software           : Rev: S-2021.12                                */
/*  Library Format     : Rev: 1.05.00                                  */
/*  Compiler Name      : hu55npkb1p11asdrl32ksa03p1                    */
/*  Platform           : Linux3.10.0-1160.49.1.el7.x86_64              */
/*                     : #1 SMP Tue Nov 30 15:51:32 UTC 2021x86_64     */
/*  Date of Generation : Fri Feb 18 10:17:43 CST 2022                  */
/*                                                                     */
/*---------------------------------------------------------------------*/

`timescale 1 ns / 1 ps

module  asdrlspkb1p64x16cm2sw0_bld_arr_rt (LOG0 , LOG1 , BB , BT , WL  );
inout LOG0 ;
inout LOG1 ;
inout  [31:0] BB;
inout  [31:0] BT;
inout  [1:0] WL;
supply0 VSS, GND;
supply1 VDD;
me84a03_BAR2 X_colrt0 (BB[0] , BB[1] , BT[0] , BT[1] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt1 (BB[2] , BB[3] , BT[2] , BT[3] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt2 (BB[4] , BB[5] , BT[4] , BT[5] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt3 (BB[6] , BB[7] , BT[6] , BT[7] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt4 (BB[8] , BB[9] , BT[8] , BT[9] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt5 (BB[10] , BB[11] , BT[10] , BT[11] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt6 (BB[12] , BB[13] , BT[12] , BT[13] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt7 (BB[14] , BB[15] , BT[14] , BT[15] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt8 (BB[16] , BB[17] , BT[16] , BT[17] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt9 (BB[18] , BB[19] , BT[18] , BT[19] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt10 (BB[20] , BB[21] , BT[20] , BT[21] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt11 (BB[22] , BB[23] , BT[22] , BT[23] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt12 (BB[24] , BB[25] , BT[24] , BT[25] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt13 (BB[26] , BB[27] , BT[26] , BT[27] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt14 (BB[28] , BB[29] , BT[28] , BT[29] , WL[0] , WL[1] );
me84a03_BAR2 X_colrt15 (BB[30] , BB[31] , BT[30] , BT[31] , WL[0] , WL[1] );
me84a03_RAM_EDGE2 X_core_endr (WL[0] , WL[1] );
endmodule
module  asdrlspkb1p64x16cm2sw0_bld_strap_rt (LOG0 , LOG1  );
inout LOG0 ;
inout LOG1 ;
supply0 VSS, GND;
supply1 VDD;
me84a03_STRAP2 X_straprt0 (LOG0 );
me84a03_STRAP2 X_straprt1 (LOG0 );
me84a03_STRAP2 X_straprt2 (LOG0 );
me84a03_STRAP2 X_straprt3 (LOG0 );
me84a03_STRAP2 X_straprt4 (LOG0 );
me84a03_STRAP2 X_straprt5 (LOG0 );
me84a03_STRAP2 X_straprt6 (LOG0 );
me84a03_STRAP2 X_straprt7 (LOG0 );
me84a03_STRAP2 X_straprt8 (LOG0 );
me84a03_STRAP2 X_straprt9 (LOG0 );
me84a03_STRAP2 X_straprt10 (LOG0 );
me84a03_STRAP2 X_straprt11 (LOG0 );
me84a03_STRAP2 X_straprt12 (LOG0 );
me84a03_STRAP2 X_straprt13 (LOG0 );
me84a03_STRAP2 X_straprt14 (LOG0 );
me84a03_STRAP2 X_straprt15 (LOG0 );
endmodule
module  asdrlspkb1p64x16cm2sw0_bld_strap_rt_bot (LOG0 , LOG1  );
inout LOG0 ;
inout LOG1 ;
supply0 VSS, GND;
supply1 VDD;
me84a03_STRAP2_BOT X_straprt0 (LOG0 );
me84a03_STRAP2_BOT X_straprt1 (LOG0 );
me84a03_STRAP2_BOT X_straprt2 (LOG0 );
me84a03_STRAP2_BOT X_straprt3 (LOG0 );
me84a03_STRAP2_BOT X_straprt4 (LOG0 );
me84a03_STRAP2_BOT X_straprt5 (LOG0 );
me84a03_STRAP2_BOT X_straprt6 (LOG0 );
me84a03_STRAP2_BOT X_straprt7 (LOG0 );
me84a03_STRAP2_BOT X_straprt8 (LOG0 );
me84a03_STRAP2_BOT X_straprt9 (LOG0 );
me84a03_STRAP2_BOT X_straprt10 (LOG0 );
me84a03_STRAP2_BOT X_straprt11 (LOG0 );
me84a03_STRAP2_BOT X_straprt12 (LOG0 );
me84a03_STRAP2_BOT X_straprt13 (LOG0 );
me84a03_STRAP2_BOT X_straprt14 (LOG0 );
me84a03_STRAP2_BOT X_straprt15 (LOG0 );
endmodule
module  asdrlspkb1p64x16cm2sw0_array_rt (LOG0 , LOG1 , BB , BT , WL  );
inout LOG0 ;
inout LOG1 ;
inout  [31:0] BB;
inout  [31:0] BT;
inout  [31:0] WL;
supply0 VSS, GND;
supply1 VDD;
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt0 (LOG0 , LOG1 , BB[31:0] , BT[31:0] , 
    WL[1:0] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt1 (LOG0 , LOG1 , BB[31:0] , BT[31:0] , 
    WL[3:2] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt2 (LOG0 , LOG1 , BB[31:0] , BT[31:0] , 
    WL[5:4] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt3 (LOG0 , LOG1 , BB[31:0] , BT[31:0] , 
    WL[7:6] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt4 (LOG0 , LOG1 , BB[31:0] , BT[31:0] , 
    WL[9:8] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt5 (LOG0 , LOG1 , BB[31:0] , BT[31:0] , 
    WL[11:10] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt6 (LOG0 , LOG1 , BB[31:0] , BT[31:0] , 
    WL[13:12] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt7 (LOG0 , LOG1 , BB[31:0] , BT[31:0] , 
    WL[15:14] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt8 (LOG0 , LOG1 , BB[31:0] , BT[31:0] , 
    WL[17:16] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt9 (LOG0 , LOG1 , BB[31:0] , BT[31:0] , 
    WL[19:18] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt10 (LOG0 , LOG1 , BB[31:0] , BT[31:0] 
    , WL[21:20] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt11 (LOG0 , LOG1 , BB[31:0] , BT[31:0] 
    , WL[23:22] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt12 (LOG0 , LOG1 , BB[31:0] , BT[31:0] 
    , WL[25:24] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt13 (LOG0 , LOG1 , BB[31:0] , BT[31:0] 
    , WL[27:26] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt14 (LOG0 , LOG1 , BB[31:0] , BT[31:0] 
    , WL[29:28] );
asdrlspkb1p64x16cm2sw0_bld_arr_rt X_rowrt15 (LOG0 , LOG1 , BB[31:0] , BT[31:0] 
    , WL[31:30] );
asdrlspkb1p64x16cm2sw0_bld_strap_rt_bot Xstrap_rtop (LOG0 , LOG1 );
asdrlspkb1p64x16cm2sw0_bld_strap_rt Xstrap_rbot (LOG0 , LOG1 );
asdrlspkb1p64x16cm2sw0_bld_strap_rt Xstrap_rtop1 (LOG0 , LOG1 );
endmodule
module  asdrlspkb1p64x16cm2sw0_refar (LOG0 , LOG1 , WL , RBLRD , RBLWR  );
inout LOG0 ;
inout LOG1 ;
inout  [31:0] WL;
inout RBLRD ;
inout RBLWR ;
wire  [31:0] net_lref_;
supply0 VSS, GND;
supply1 VDD;
me84a03_HS2LREF X_refrow0 (LOG0 , RBLRD , RBLWR , WL[0] , WL[1] , net_lref_[0] 
    , net_lref_[1] );
me84a03_HS2LREF X_refrow1 (LOG0 , RBLRD , RBLWR , WL[2] , WL[3] , net_lref_[1] 
    , net_lref_[2] );
me84a03_HS2LREF X_refrow2 (LOG0 , RBLRD , RBLWR , WL[4] , WL[5] , net_lref_[2] 
    , net_lref_[3] );
me84a03_HS2LREF X_refrow3 (LOG0 , RBLRD , RBLWR , WL[6] , WL[7] , net_lref_[3] 
    , net_lref_[4] );
me84a03_HS2LREF X_refrow4 (LOG0 , RBLRD , RBLWR , WL[8] , WL[9] , net_lref_[4] 
    , net_lref_[5] );
me84a03_HS2LREF X_refrow5 (LOG0 , RBLRD , RBLWR , WL[10] , WL[11] , 
    net_lref_[5] , net_lref_[6] );
me84a03_HS2LREF X_refrow6 (LOG0 , RBLRD , RBLWR , WL[12] , WL[13] , 
    net_lref_[6] , net_lref_[7] );
me84a03_HS2LREF X_refrow7 (LOG0 , RBLRD , RBLWR , WL[14] , WL[15] , 
    net_lref_[7] , net_lref_[8] );
me84a03_HS2LREF X_refrow8 (LOG0 , RBLRD , RBLWR , WL[16] , WL[17] , 
    net_lref_[8] , net_lref_[9] );
me84a03_HS2LREF X_refrow9 (LOG0 , RBLRD , RBLWR , WL[18] , WL[19] , 
    net_lref_[9] , net_lref_[10] );
me84a03_HS2LREF X_refrow10 (LOG0 , RBLRD , RBLWR , WL[20] , WL[21] , 
    net_lref_[10] , net_lref_[11] );
me84a03_HS2LREF X_refrow11 (LOG0 , RBLRD , RBLWR , WL[22] , WL[23] , 
    net_lref_[11] , net_lref_[12] );
me84a03_HS2LREF X_refrow12 (LOG0 , RBLRD , RBLWR , WL[24] , WL[25] , 
    net_lref_[12] , net_lref_[13] );
me84a03_HS2LREF X_refrow13 (LOG0 , RBLRD , RBLWR , WL[26] , WL[27] , 
    net_lref_[13] , net_lref_[14] );
me84a03_HS2LREF X_refrow15 (LOG0 , RBLRD , RBLWR , WL[28] , WL[29] , 
    net_lref_[15] , net_lref_[16] );
me84a03_HS2LREF X_refrow16 (LOG0 , RBLRD , RBLWR , WL[30] , WL[31] , 
    net_lref_[16] , net_lref_[17] );
me84a03_STRAP_BOT Xstrap_reft (LOG0 );
me84a03_STRAP Xstrap_reft1 (LOG0 );
me84a03_STRAP Xstrap_refb (LOG0 );
endmodule
module  asdrlspkb1p64x16cm2sw0_xdec_top (LOG0 , LOG1 , WLL , WLR , PARDB , PBRDB
     , WCLKRD , WCLKRDB , RDOFF , WRREF  );
output LOG0 ;
output LOG1 ;
output  [31:0] WLL;
output  [31:0] WLR;
input  [7:0] PARDB;
input  [15:0] PBRDB;
input  [1:0] WCLKRD;
input  [1:0] WCLKRDB;
input RDOFF ;
input WRREF ;
supply0 VSS, GND;
supply1 VDD;
me84a03_X2DEC_SD_LC X_xdec0 (PARDB[0] , PARDB[1] , PBRDB[0] , VDDR , WCLKRD[0] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[1] , WLL[0] , WLR[1] , WLR[0] , WRREF );
me84a03_X2DEC_SD_LC X_xdec2 (PARDB[4] , PARDB[5] , PBRDB[0] , VDDR , WCLKRD[1] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[5] , WLL[4] , WLR[5] , WLR[4] , WRREF );
me84a03_X2DEC_SD_LC X_xdec4 (PARDB[0] , PARDB[1] , PBRDB[1] , VDDR , WCLKRD[0] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[9] , WLL[8] , WLR[9] , WLR[8] , WRREF );
me84a03_X2DEC_SD_LC X_xdec6 (PARDB[4] , PARDB[5] , PBRDB[1] , VDDR , WCLKRD[1] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[13] , WLL[12] , WLR[13] , WLR[12] , WRREF );
me84a03_X2DEC_SD_LC X_xdec8 (PARDB[0] , PARDB[1] , PBRDB[2] , VDDR , WCLKRD[0] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[17] , WLL[16] , WLR[17] , WLR[16] , WRREF );
me84a03_X2DEC_SD_LC X_xdec10 (PARDB[4] , PARDB[5] , PBRDB[2] , VDDR , WCLKRD[1] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[21] , WLL[20] , WLR[21] , WLR[20] , WRREF );
me84a03_X2DEC_SD_LC X_xdec12 (PARDB[0] , PARDB[1] , PBRDB[3] , VDDR , WCLKRD[0] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[25] , WLL[24] , WLR[25] , WLR[24] , WRREF );
me84a03_X2DEC_SD_LC X_xdec14 (PARDB[4] , PARDB[5] , PBRDB[3] , VDDR , WCLKRD[1] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[29] , WLL[28] , WLR[29] , WLR[28] , WRREF );
me84a03_X2DEC_SD_LC X_xdec1 (PARDB[2] , PARDB[3] , PBRDB[0] , VDDR , WCLKRD[0] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[2] , WLL[3] , WLR[2] , WLR[3] , WRREF );
me84a03_X2DEC_SD_LC X_xdec3 (PARDB[6] , PARDB[7] , PBRDB[0] , VDDR , WCLKRD[1] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[6] , WLL[7] , WLR[6] , WLR[7] , WRREF );
me84a03_X2DEC_SD_LC X_xdec5 (PARDB[2] , PARDB[3] , PBRDB[1] , VDDR , WCLKRD[0] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[10] , WLL[11] , WLR[10] , WLR[11] , WRREF );
me84a03_X2DEC_SD_LC X_xdec7 (PARDB[6] , PARDB[7] , PBRDB[1] , VDDR , WCLKRD[1] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[14] , WLL[15] , WLR[14] , WLR[15] , WRREF );
me84a03_X2DEC_SD_LC X_xdec9 (PARDB[2] , PARDB[3] , PBRDB[2] , VDDR , WCLKRD[0] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[18] , WLL[19] , WLR[18] , WLR[19] , WRREF );
me84a03_X2DEC_SD_LC X_xdec11 (PARDB[6] , PARDB[7] , PBRDB[2] , VDDR , WCLKRD[1] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[22] , WLL[23] , WLR[22] , WLR[23] , WRREF );
me84a03_X2DEC_SD_LC X_xdec13 (PARDB[2] , PARDB[3] , PBRDB[3] , VDDR , WCLKRD[0] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[26] , WLL[27] , WLR[26] , WLR[27] , WRREF );
me84a03_X2DEC_SD_LC X_xdec15 (PARDB[6] , PARDB[7] , PBRDB[3] , VDDR , WCLKRD[1] 
    , WCLKRDB[0] , WCLKRDB[1] , WLL[30] , WLL[31] , WLR[30] , WLR[31] , WRREF );
me84a03_XDEC_SD_PG XPGB (RDOFF , VDDR , INTB , WRREF );
me84a03_XDEC_SD_PG XPGT (RDOFF , VDDR , INT , WRREF );
endmodule
module  asdrlspkb1p64x16cm2sw0_war_blk_rt (LOG0 , LOG1 , BB , BT , RWL , RBLRD 
    , RBLWR  );
inout LOG0 ;
inout LOG1 ;
inout  [31:0] BB;
inout  [31:0] BT;
inout RWL ;
inout RBLRD ;
inout RBLWR ;
supply0 VSS, GND;
supply1 VDD;
me84a03_WARREF X_war_end_r (LOG0 , LOG1 , RBLRD , RBLWR , RWL , RWL );
me84a03_BWAR2 X_warrt_blk0 (BB[0] , BB[1] , BT[0] , BT[1] , LOG0 , LOG1 , RWL , 
    RWL );
me84a03_BWAR2 X_warrt_blk1 (BB[2] , BB[3] , BT[2] , BT[3] , LOG0 , LOG1 , RWL , 
    RWL );
me84a03_BWAR2 X_warrt_blk2 (BB[4] , BB[5] , BT[4] , BT[5] , LOG0 , LOG1 , RWL , 
    RWL );
me84a03_BWAR2 X_warrt_blk3 (BB[6] , BB[7] , BT[6] , BT[7] , LOG0 , LOG1 , RWL , 
    RWL );
me84a03_BWAR2 X_warrt_blk4 (BB[8] , BB[9] , BT[8] , BT[9] , LOG0 , LOG1 , RWL , 
    RWL );
me84a03_BWAR2 X_warrt_blk5 (BB[10] , BB[11] , BT[10] , BT[11] , LOG0 , LOG1 , 
    RWL , RWL );
me84a03_BWAR2 X_warrt_blk6 (BB[12] , BB[13] , BT[12] , BT[13] , LOG0 , LOG1 , 
    RWL , RWL );
me84a03_BWAR2_RET X_warrt_blk7 (BB[14] , BB[15] , BT[14] , BT[15] , LOG0 , LOG1 
    , RWL , RWL );
me84a03_BWAR2 X_warrt_blk8 (BB[16] , BB[17] , BT[16] , BT[17] , LOG0 , LOG1 , 
    LOG0 , LOG0 );
me84a03_BWAR2 X_warrt_blk9 (BB[18] , BB[19] , BT[18] , BT[19] , LOG0 , LOG1 , 
    LOG0 , LOG0 );
me84a03_BWAR2 X_warrt_blk10 (BB[20] , BB[21] , BT[20] , BT[21] , LOG0 , LOG1 , 
    LOG0 , LOG0 );
me84a03_BWAR2 X_warrt_blk11 (BB[22] , BB[23] , BT[22] , BT[23] , LOG0 , LOG1 , 
    LOG0 , LOG0 );
me84a03_BWAR2 X_warrt_blk12 (BB[24] , BB[25] , BT[24] , BT[25] , LOG0 , LOG1 , 
    LOG0 , LOG0 );
me84a03_BWAR2 X_warrt_blk13 (BB[26] , BB[27] , BT[26] , BT[27] , LOG0 , LOG1 , 
    LOG0 , LOG0 );
me84a03_BWAR2 X_warrt_blk14 (BB[28] , BB[29] , BT[28] , BT[29] , LOG0 , LOG1 , 
    LOG0 , LOG0 );
me84a03_BWAR2 X_warrt_blk15 (BB[30] , BB[31] , BT[30] , BT[31] , LOG0 , LOG1 , 
    LOG0 , LOG0 );
me84a03_RAM_EDGE2 X_war_end_l (LOG0 , LOG0 );
endmodule
module  asdrlspkb1p64x16cm2sw0_io_rt (LOG0 , LOG1 , Q , BB , BT , CCOR , CCRD , 
    CCWR , DA , DCLKB , LWE , MCLK , PCB , RBLRD , RBLWR , RW_RBL , RT1 , SAEBRT
     , SAOFF , STCLK , STCLKWR , T1B , WRREF  );
output LOG0 ;
output LOG1 ;
output  [15:0] Q;
input  [31:0] BB;
input  [31:0] BT;
input CCOR ;
input CCRD ;
input CCWR ;
input  [15:0] DA;
input DCLKB ;
input LWE ;
input MCLK ;
input  [3:0] PCB;
input RBLRD ;
input RBLWR ;
input RW_RBL ;
input RT1 ;
input SAEBRT ;
input SAOFF ;
input STCLK ;
input STCLKWR ;
input T1B ;
input WRREF ;
wire  [15:0] WEMA_AH;
wire  [15:0] WEMA_AL;
supply0 VSS, GND;
supply1 VDD;
me84a03_RIO_BL_LITE XRIO (CCOR , CCRD , CCWR , DCLKB , LOG0 , LOG1 , LWE , MCLK 
    , PCB[0] , PCB[1] , PCB[2] , PCB[3] , RBLRD , RBLWR , RT1 , RW_RBL , SAEB , 
    SAEBRT , SAOFF , STCLK , STCLKWR , T1B , WRREF );
me84a03_IOCM2_LITE_LC_32 Xio_rt0 (BB[0] , BB[1] , BT[0] , BT[1] , CCRD , DA[0] 
    , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[0] , PCB[1] , Q[0] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt2 (BB[4] , BB[5] , BT[4] , BT[5] , CCRD , DA[2] 
    , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[0] , PCB[1] , Q[2] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt4 (BB[8] , BB[9] , BT[8] , BT[9] , CCRD , DA[4] 
    , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[0] , PCB[1] , Q[4] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt6 (BB[12] , BB[13] , BT[12] , BT[13] , CCRD , 
    DA[6] , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[0] , PCB[1] , Q[6] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt8 (BB[16] , BB[17] , BT[16] , BT[17] , CCRD , 
    DA[8] , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[0] , PCB[1] , Q[8] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt10 (BB[20] , BB[21] , BT[20] , BT[21] , CCRD , 
    DA[10] , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[0] , PCB[1] , Q[10] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt12 (BB[24] , BB[25] , BT[24] , BT[25] , CCRD , 
    DA[12] , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[0] , PCB[1] , Q[12] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt14 (BB[28] , BB[29] , BT[28] , BT[29] , CCRD , 
    DA[14] , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[0] , PCB[1] , Q[14] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt1 (BB[3] , BB[2] , BT[3] , BT[2] , CCRD , DA[1] 
    , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[3] , PCB[2] , Q[1] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt3 (BB[7] , BB[6] , BT[7] , BT[6] , CCRD , DA[3] 
    , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[3] , PCB[2] , Q[3] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt5 (BB[11] , BB[10] , BT[11] , BT[10] , CCRD , 
    DA[5] , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[3] , PCB[2] , Q[5] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt7 (BB[15] , BB[14] , BT[15] , BT[14] , CCRD , 
    DA[7] , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[3] , PCB[2] , Q[7] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt9 (BB[19] , BB[18] , BT[19] , BT[18] , CCRD , 
    DA[9] , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[3] , PCB[2] , Q[9] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt11 (BB[23] , BB[22] , BT[23] , BT[22] , CCRD , 
    DA[11] , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[3] , PCB[2] , Q[11] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt13 (BB[27] , BB[26] , BT[27] , BT[26] , CCRD , 
    DA[13] , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[3] , PCB[2] , Q[13] , SAEB );
me84a03_IOCM2_LITE_LC_32 Xio_rt15 (BB[31] , BB[30] , BT[31] , BT[30] , CCRD , 
    DA[15] , DCLKB , LOG0 , LOG1 , LWE , LWE , PCB[3] , PCB[2] , Q[15] , SAEB );
me84a03_CAP_RT XCAP1K (LOG0 , LOG1 );
endmodule
module  asdrlspkb1p64x16cm2sw0_gcen_with_prog (LOG0 , LOG1 , ACUTRK , CCOR , 
    CCRDR , DCLKBR , MCLK , LWER , PARDB , PBRDB , PCBR , RDOFF , RW_RBL , SAOFF
     , T1B , WCLKRD , WCLKRDB , Z0B , Z , ADRRD , CLK , CCWR , ME , RMDEF , RMEN
     , RMEXT , RMFAST , RMSLOW , SAEBRT , STCLK , STCLKWR , TEST1 , WE  );
output LOG0 ;
output LOG1 ;
output ACUTRK ;
output CCOR ;
output CCRDR ;
output DCLKBR ;
output MCLK ;
output LWER ;
output  [7:0] PARDB;
output  [3:0] PBRDB;
output  [3:0] PCBR;
output RDOFF ;
output RW_RBL ;
output SAOFF ;
output T1B ;
output  [1:0] WCLKRD;
output  [1:0] WCLKRDB;
output Z0B ;
output  [2:0] Z;
input  [5:0] ADRRD;
input CLK ;
input CCWR ;
input ME ;
input  [2:0] RMDEF;
input RMEN ;
input  [3:0] RMEXT;
input  [2:0] RMFAST;
input  [2:0] RMSLOW;
input SAEBRT ;
input STCLK ;
input STCLKWR ;
input TEST1 ;
input WE ;
supply0 VSS, GND;
supply1 VDD;
me84a03_CENTER_SD_LITE_LC_32 Xgcen (ACUTRK , CCOR , CCRDR , CCWR , CLK , DCLKBR 
    , FLOATI , LOG0 , LOG1 , LWEI , LWER , MCLK , ME , MERDA0 , MERDA1 , 
    PARDB[0] , PARDB[1] , PARDB[2] , PARDB[3] , PARDB[4] , PARDB[5] , PARDB[6] 
    , PARDB[7] , PBRDB[0] , PBRDB[1] , PBRDB[2] , PBRDB[3] , PCBR[0] , PCBR[1] 
    , PCBR[2] , PCBR[3] , PRCLK , RM0N , RM0N1 , VDD , RM0N , RM0N , VSS , RM1N 
    , RM1N , RM1P1 , RM1N , RLYA1QB , RDOFF , RLYA0QB , RLYA0QT , RLYA1QB , 
    RLYA1QT , RMDEF[0] , RMDEF[1] , RMDEF[2] , RMEN , RMENB , RMEN , RMENB , 
    RMEXT[0] , RMEXT[1] , RMEXT[2] , RMEXT[3] , RMFAST[0] , RMFAST[1] , 
    RMFAST[2] , RMSLOW[0] , RMSLOW[1] , RMSLOW[2] , LOG0 , RW_RBL , SAEBRT , 
    SAOFF , MERDA1 , STCLK , STCLKWR , WEA1 , T1B , TEST1 , WCLKRD[0] , 
    WCLKRD[1] , WCLKRDB[0] , WCLKRDB[1] , WE , WEA0 , WEA1 , ADRRD[1] , 
    ADRRD[2] , ADRRD[3] , ADRRD[4] , ADRRD[5] , LOG0 , LOG0 , ADRRD[0] , LOG0 , 
    Z[0] , Z0B , Z[1] , Z[2] );
endmodule
module  asdrlspkb1p64x16cm2sw0 (Q , ADR , D , WE , ME , CLK , TEST1 , RME , RM 
     );
output  [15:0] Q;
input  [5:0] ADR;
input  [15:0] D;
input WE ;
input ME ;
input CLK ;
input TEST1 ;
input RME ;
input  [3:0] RM;
wire  [3:0] Z;
wire  [1:0] WCLKRD;
wire  [1:0] WCLKRDB;
wire  [31:0] BB;
wire  [31:0] BT;
wire  [31:0] WLL;
wire  [31:0] WLR;
wire  [7:0] PARDB;
wire  [3:0] PBRDB;
wire  [1:0] RPARDB;
wire  [3:0] PCBR;
wire  [3:0] PCBL;
wire RT1 ;
supply0 VSS, GND;
supply1 VDD;
me84a03_RW_SD_LC Xrw (ACUTRK , LOG0 , LOG1 , RBLRD , RBLWR , RWLR , RWLR , VDD 
    , WCLKRD[0] , WCLKRDB[0] , WLBRW , WRREF , Z[0] , Z[1] , Z[2] );
asdrlspkb1p64x16cm2sw0_war_blk_rt Xwar_rt (LOG0 , LOG1 , BB[31:0] , BT[31:0] , 
    RWLR , RBLRD , RBLWR );
asdrlspkb1p64x16cm2sw0_array_rt Xarray_rt (LOG0 , LOG1 , BB[31:0] , BT[31:0] , 
    WLR[31:0] );
asdrlspkb1p64x16cm2sw0_refar Xrefar_rt (LOG0 , LOG1 , WLR[31:0] , RBLRD , RBLWR 
    );
asdrlspkb1p64x16cm2sw0_xdec_top Xxdec_top (LOG0 , LOG1 , WLL[31:0] , WLR[31:0] 
    , PARDB[7:0] , { VSS , VSS , VSS , VSS , VSS , VSS , VSS , VSS , VSS , VSS 
    , VSS , VSS , PBRDB[3] , PBRDB[2] , PBRDB[1] , PBRDB[0] } , WCLKRD[1:0] , 
    WCLKRDB[1:0] , RDOFF , WRREF );
asdrlspkb1p64x16cm2sw0_gcen_with_prog Xgcen (LOG0 , LOG1 , ACUTRK , CCOR , CCRDR
     , DCLKBR , MCLK , LWER , PARDB[7:0] , PBRDB[3:0] , PCBR[3:0] , RDOFF , 
    RW_RBL , SAOFF , T1B , WCLKRD[1:0] , WCLKRDB[1:0] , Z0B , Z[2:0] , ADR[5:0] 
    , CLK , CCWR , ME , { LOG1 , LOG1 , LOG1 } , RME , RM[3:0] , { LOG1 , LOG1 
    , LOG1 } , { LOG0 , LOG1 , LOG0 } , SAEBRT , STCLK , STCLKWR , TEST1 , WE );
asdrlspkb1p64x16cm2sw0_io_rt Xio_rt (LOG0 , LOG1 , Q[15:0] , BB[31:0] , 
    BT[31:0] , CCOR , CCRDR , CCWR , D[15:0] , DCLKBR , LWER , MCLK , PCBR[3:0] 
    , RBLRD , RBLWR , RW_RBL , RT1 , SAEBRT , SAOFF , STCLK , STCLKWR , T1B , 
    WRREF );
endmodule
