/*---------------------------------------------------------------------*/
/*               Copyright(c) Synopsys, Inc.                           */
/*     All Rights reserved - Unpublished -rights reserved under        */
/*     the Copyright laws of the United States of America.             */
/*                                                                     */
/*  U.S. Patents: 7,093,156 B1 and 7,406,620 B2 (and more pending).    */
/*                                                                     */
/*  This file includes the Confidential information of Synopsys, Inc.  */
/*  and Huali.                                                         */
/*  The receiver of this Confidential Information shall not disclose   */
/*  it to any third party and shall protect its confidentiality by     */
/*  using the same degree of care, but not less than a reasonable      */
/*  degree of care, as the receiver uses to protect receiver's own     */
/*  Confidential Information.                                          */
/*  Licensee acknowledges and agrees that all output generated for     */
/*  Licensee by Synopsys, Inc. as described in the pertinent Program   */
/*  Schedule(s), or generated by Licensee through use of any Compiler  */
/*  licensed hereunder contains information that complies with the     */
/*  Virtual Component Identification Physical Tagging Standard (VCID)  */
/*  as maintained by the Virtual Socket Interface Alliance (VSIA).     */
/*  Such information may be expressed in GDSII Layer 63 or other such  */
/*  layer designated by the VSIA, hardware definition languages, or    */
/*  other formats.  Licensee is not authorized to alter or change any  */
/*  such information.                                                  */
/*---------------------------------------------------------------------*/
/*                                                                     */
/*  Built for linux64 and running on linux64.                          */
/*                                                                     */
/*  Software           : Rev: S-2021.12                                */
/*  Library Format     : Rev: 1.05.00                                  */
/*  Compiler Name      : hu55npkb1p11asdrl32ksa03p1                    */
/*  Platform           : Linux3.10.0-1160.49.1.el7.x86_64              */
/*                     : #1 SMP Tue Nov 30 15:51:32 UTC 2021x86_64     */
/*  Date of Generation : Fri Feb 18 10:17:50 CST 2022                  */
/*                                                                     */
/*---------------------------------------------------------------------*/
/* This file may be generated under license from Logic Vision , Inc. */
/* only for use by Logic Vision , Inc licensess.The information contained herein */
/* is the proprietary to and constitutes valuable confidential trade secrets of LogicVision , Inc */
/* or its licensors , and is subject to restrictions on use and disclosure */
/*    (c) LogicVision , Inc . 1993-1999     */

/* This memBIST model does not contain sufficient information to gurantee exact checkerboard pattern. */

/*   --------------------------------------------------------------   */
/*                       Template Revision : 3.7.8                    */
/*   --------------------------------------------------------------   */

MemoryTemplate ( asdrlspkb1p64x16cm2sw0 ) {
   CellName:      asdrlspkb1p64x16cm2sw0;
   MemoryType:    SRAM;
   LogicalPorts:  1RW;
   NumberofWords:  64;
   NumberofBits :  16;
   Algorithm:  SMarch ;
   BitGrouping : 1;
   OperationSet: Sync;
   MinHold:  1.217;
   ShadowRead: Off;
   WriteOutOfRange: Off;
   AddressCounter {
     Function (Address) {
       LogicalAddressMaP {
         ColumnAddress [0:0] :
         Address [0:0] ;
         RowAddress [4:0] :
         Address [5:1] ;
       }
     }
     Function (Rowaddress) {
       CountRange [0:31];
     }
     Function (Columnaddress) {
       CountRange [0:1];
     }
   }
Port (  Q[15:0] )
             {   
               Direction: OUTPUT;
               Function: data;

             }
Port (  ADR[5:0] )
             {   
               Direction: INPUT;
               Function: Address;

             }
Port (  D[15:0] )
             {   
               Direction: INPUT;
               Function: data;

             }
Port (  WE )
             {   
               Direction: INPUT;
               Function: WriteEnable;
               Polarity: ActiveHigh;

             }
Port (  ME )
             {   
               Direction: INPUT;
               Function: Select;
               Polarity: ActiveHigh;

             }
Port (  CLK )
             {   
               Direction: INPUT;
               Function: Clock;
               Polarity: ActiveHigh;

             }
Port (  TEST1 )
             {   
               Direction: INPUT;
               Function: LogicLow;

             }
Port (  RM[3:0] )
             {   
               Direction: INPUT;
               Function: none;

             }
Port (  RME )
             {   
               Direction: INPUT;
               Function: LogicLow;

             }
}
